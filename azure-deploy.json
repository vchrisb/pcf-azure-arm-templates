{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of storage account created with Azure CLI"
      }
    },
    "storageEndpoint": {
      "type": "string",
	  "metadata": {
        "description": "Domain prefix for storaged based on the chosen Azure cloud i.e. Commercial, Germany, etc."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS2_v2",
      "metadata": {
        "description": "Size of vm"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "pivotal",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminSSHKey": {
      "type": "securestring",
      "metadata": {
        "description": "Public SSH key to add to admin user."
      }
    },
    "deploy_ssh_lb": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": ""
      }
    },
    "deploy_tcp_lb": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": ""
      }
    },
    "deploy_mysql_lb": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": ""
      }
    }
  },
  "variables": {
    "api-version": "2015-06-15",
    "opsManVMName": "pcf-ops-man",
    "opsManFQDNPrefix": "[concat('pcf-opsman-',uniquestring(resourceGroup().id, deployment().name))]",
    "vmStorageAccountContainerName": "vhds",
    "storageid": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]", 
    "virtualNetworkName": "pcf-net",
    "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
    "addressPrefix": "10.0.0.0/16",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "defaultNSG": "default-nsg",
    "subnet1Name": "opsman",
    "subnet1Prefix": "10.0.0.0/24",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/', variables('subnet1Name'))]",
    "subnet1NSG": "opsman-nsg",
    "subnet2Name": "ert",
    "subnet2Prefix": "10.0.1.0/24",
    "subnet2Ref": "[concat(variables('vnetID'),'/subnets/', variables('subnet2Name'))]",
    "subnet2NSG": "ert-nsg",
    "subnet3Name": "service",
    "subnet3Prefix": "10.0.2.0/24",
    "subnet3Ref": "[concat(variables('vnetID'),'/subnets/', variables('subnet3Name'))]",
    "subnet3NSG": "service-nsg",
    "subnet4Name": "ondemand",
    "subnet4Prefix": "10.0.3.0/24",
    "subnet4Ref": "[concat(variables('vnetID'),'/subnets/', variables('subnet4Name'))]",
    "subnet4NSG": "ondemand-nsg",
    "opsManNicName": "[variables('opsManVMName')]",
    "opsManPrivateIPAddress": "10.0.0.4",
    "lb1Name": "pcf-lb",
    "lb1IPName": "pcf-fe-ip",
    "lb1PubIPName": "pcf-lb-ip",
    "lb1ID": "[resourceId('Microsoft.Network/loadBalancers',variables('lb1Name'))]",
    "lb1frontEndIPConfigID": "[concat(variables('lb1ID'),'/frontendIPConfigurations/', variables('lb1IPName'))]",
    "lb1PoolName": "pcf-vms",
    "lb1PoolID": "[concat(variables('lb1ID'),'/backendAddressPools/', variables('lb1PoolName'))]",
    "lb1ProbeID": "[concat(variables('lb1ID'),'/probes/tcp80')]",
    "lb2Name": "pcf-ssh-lb",
    "lb2IPName": "pcf-ssh-fe-ip",
    "lb2PubIPName": "pcf-ssh-lb-ip",
    "lb2ID": "[resourceId('Microsoft.Network/loadBalancers',variables('lb2Name'))]",
    "lb2frontEndIPConfigID": "[concat(variables('lb2ID'),'/frontendIPConfigurations/', variables('lb2IPName'))]",
    "lb2PoolName": "diego-vms",
    "lb2PoolID": "[concat(variables('lb2ID'),'/backendAddressPools/', variables('lb2PoolName'))]",
    "lb2ProbeID": "[concat(variables('lb2ID'),'/probes/tcp2222')]",
    "lb3Name": "pcf-tcp-lb",
    "lb3IPName": "pcf-tcp-fe-ip",
    "lb3PubIPName": "pcf-tcp-lb-ip",
    "lb3ID": "[resourceId('Microsoft.Network/loadBalancers',variables('lb3Name'))]",
    "lb3frontEndIPConfigID": "[concat(variables('lb3ID'),'/frontendIPConfigurations/', variables('lb3IPName'))]",
    "lb3PoolName": "tcp-vms",
    "lb3PoolID": "[concat(variables('lb3ID'),'/backendAddressPools/', variables('lb3PoolName'))]",
    "lb3ProbeID": "[concat(variables('lb3ID'),'/probes/tcp12000')]",
    "lb4Name": "pcf-mysql-lb",
    "lb4IPName": "pcf-mysql-fe-ip",
    "lb4ID": "[resourceId('Microsoft.Network/loadBalancers',variables('lb4Name'))]",
    "lb4frontEndIPConfigID": "[concat(variables('lb4ID'),'/frontendIPConfigurations/', variables('lb4IPName'))]",
    "lb4PoolName": "mysql-vms",
    "lb4PoolID": "[concat(variables('lb4ID'),'/backendAddressPools/', variables('lb4PoolName'))]",
    "lb4ProbeID": "[concat(variables('lb4ID'),'/probes/tcp1936')]",
    "lb4PrivIPAddr": "10.0.1.4"
  },
  "resources": [
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "opsman-ip",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('opsManFQDNPrefix')]"
        }
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('lb1PubIPName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "static"
      }
    },
    {
      "condition": "[parameters('deploy_ssh_lb')]",
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('lb2PubIPName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "static"
      }
    },
    {
      "condition": "[parameters('deploy_tcp_lb')]",
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('lb3PubIPName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "static"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('defaultNSG')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
            {
              "name": "allow-any-any",
              "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
              }
           }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('subnet1NSG')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
            {
              "name": "allow-ssh-to-opsman",
              "properties": {
                "description": "Allow Inbound SSH To Ops Manager",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "[concat(variables('opsManPrivateIPAddress'), '/32')]",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
              }
            }, {
              "name": "allow-http-to-opsman",
              "properties": {
                "description": "Allow Inbound HTTP To Ops Manager",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "[concat(variables('opsManPrivateIPAddress'), '/32')]",
                "access": "Allow",
                "priority": 110,
                "direction": "Inbound"
              }
            }, {
              "name": "allow-https-to-opsman",
              "properties": {
                "description": "Allow Inbound HTTPS To Ops Manager",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "[concat(variables('opsManPrivateIPAddress'), '/32')]",
                "access": "Allow",
                "priority": 120,
                "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('subnet2NSG')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
            {
              "name": "allow-http",
              "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
              }
           }, {
              "name": "allow-https",
              "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 110,
                "direction": "Inbound"
                }
			     }, {
              "name": "allow-diego-ssh",
              "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "2222",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 120,
                "direction": "Inbound"
                }
            }, {
              "name": "allow-tcp",
              "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "12000-12004",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 130,
                "direction": "Inbound"
                }
            }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('subnet3NSG')]",
      "location": "[resourceGroup().location]"
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('subnet4NSG')]",
      "location": "[resourceGroup().location]"
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('subnet1NSG'))]",
		"[concat('Microsoft.Network/networkSecurityGroups/', variables('subnet2NSG'))]",
		"[concat('Microsoft.Network/networkSecurityGroups/', variables('subnet3NSG'))]",
		"[concat('Microsoft.Network/networkSecurityGroups/', variables('subnet4NSG'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]",
              "networkSecurityGroup":{
                  "id":"[resourceId('Microsoft.Network/networkSecurityGroups', variables('subnet1NSG'))]"
              }
            }
          }, 
		  {
            "name": "[variables('subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet2Prefix')]",
              "networkSecurityGroup":{
                  "id":"[resourceId('Microsoft.Network/networkSecurityGroups', variables('subnet2NSG'))]"
              }
            }
          },
          {
            "name": "[variables('subnet3Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet3Prefix')]",
              "networkSecurityGroup":{
                  "id":"[resourceId('Microsoft.Network/networkSecurityGroups', variables('subnet3NSG'))]"
              }
            }
          },
          {
            "name": "[variables('subnet4Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet4Prefix')]",
              "networkSecurityGroup":{
                  "id":"[resourceId('Microsoft.Network/networkSecurityGroups', variables('subnet4NSG'))]"
              }
            }
          }    
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "name": "[variables('lb1Name')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
		  "[concat('Microsoft.Network/publicIPAddresses/', variables('lb1PubIPName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('lb1IPName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('lb1PubIPName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('lb1PoolName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "https",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lb1frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lb1PoolID')]"
              },
              "protocol": "tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('lb1ProbeID')]"
              }
            }
          },
          {
            "name": "http",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lb1frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lb1PoolID')]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('lb1ProbeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcp80",
            "properties": {
              "protocol": "tcp",
              "port": 80,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "condition": "[parameters('deploy_ssh_lb')]",
      "apiVersion": "2015-05-01-preview",
      "name": "[variables('lb2Name')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
		  "[concat('Microsoft.Network/publicIPAddresses/', variables('lb2PubIPName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('lb2IPName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('lb2PubIPName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('lb2PoolName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "diego-ssh",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lb2frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lb2PoolID')]"
              },
              "protocol": "tcp",
              "frontendPort": 2222,
              "backendPort": 2222,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('lb2ProbeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcp2222",
            "properties": {
              "protocol": "tcp",
              "port": 2222,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "condition": "[parameters('deploy_tcp_lb')]",
      "apiVersion": "2015-05-01-preview",
      "name": "[variables('lb3Name')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
		  "[concat('Microsoft.Network/publicIPAddresses/', variables('lb3PubIPName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('lb3IPName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('lb3PubIPName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('lb3PoolName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "diego-tcp0",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lb3frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lb3PoolID')]"
              },
              "protocol": "tcp",
              "frontendPort": 12000,
              "backendPort": 12000,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('lb3ProbeID')]"
              }
            }
          },{
            "name": "diego-tcp1",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lb3frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lb3PoolID')]"
              },
              "protocol": "tcp",
              "frontendPort": 12001,
              "backendPort": 12001,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('lb3ProbeID')]"
              }
            }
          },{
            "name": "diego-tcp2",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lb3frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lb3PoolID')]"
              },
              "protocol": "tcp",
              "frontendPort": 12002,
              "backendPort": 12002,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('lb3ProbeID')]"
              }
            }
          },{
            "name": "diego-tcp3",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lb3frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lb3PoolID')]"
              },
              "protocol": "tcp",
              "frontendPort": 12003,
              "backendPort": 12003,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('lb3ProbeID')]"
              }
            }
          },{
            "name": "diego-tcp4",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lb3frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lb3PoolID')]"
              },
              "protocol": "tcp",
              "frontendPort": 12004,
              "backendPort": 12004,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('lb3ProbeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcp12000",
            "properties": {
              "protocol": "tcp",
              "port": 12000,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "condition": "[parameters('deploy_mysql_lb')]",
      "apiVersion": "2015-05-01-preview",
      "name": "[variables('lb4Name')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('lb4IPName')]",
            "properties": {
              "subnet": {
                 "id": "[variables('subnet2Ref')]"
               },
               "privateIPAddress": "[variables('lb4PrivIPAddr')]",
               "privateIPAllocationMethod": "Static"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('lb4PoolName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "diego-mysql",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lb4frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lb4PoolID')]"
              },
              "protocol": "tcp",
              "frontendPort": 3306,
              "backendPort": 3306,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('lb4ProbeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcp1936",
            "properties": {
              "protocol": "tcp",
              "port": 1936,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('opsManNicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', 'opsman-ip')]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('opsManPrivateIPAddress')]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses','opsman-ip')]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiversion": "[variables('api-version')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('opsManVMName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',variables('opsManNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('opsManVMName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [{
                "path": "[variables('sshKeyPath')]",
                "keyData": "[parameters('adminSSHKey')]"
              }]
            }
          }
        },
        "storageProfile": {
          "osDisk": {
            "osType": "Linux",
            "name": "osdisk",
            "createOption": "FromImage",
            "image": {
              "uri": "[concat('https://',parameters('storageAccountName'),'.',parameters('storageEndpoint'),'/opsman-image/image.vhd')]"
            },
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountName'),'.',parameters('storageEndpoint'),'/',variables('vmStorageAccountContainerName'),'/',variables('opsManVMName'),'-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "diskSizeGB": "120"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('opsManNicName'))]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "OpsMan-FQDN": {
      "type" : "string",
      "value": "[reference('opsman-ip').dnsSettings.fqdn]"
    },
    "Loadbalancer-IP": {
      "type" : "string",
      "value": "[reference(variables('lb1PubIPName')).ipAddress]"
    },
    "Loadbalancer-SSH-IP": {
      "type" : "string",
      "value": "[reference(variables('lb2PubIPName')).ipAddress]"
    }
  }
}
